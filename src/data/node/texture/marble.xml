<?xml version="1.0"?>

<node name="marble" author="Sler guys">
	<help>Marble semi fractal shader.</help>
	<input>
		<property name="inColor1" type="color" default="color(0.8, 0.2, 0.05)" />
		<property name="inColor2" type="color" default="color(0.8, 0.8, 0.79)" />
		<property name="veining" type="float" default="2.5" />
		<property name="P" type="point" default="point(0.0, 0.0, 0.0)" />
	</input>
	<output>
		<property name="outColor" type="color"/>
	</output>
	<internal>
		<variable name="surfaceColor"/>
		<variable name="layerColor"/>
		<variable name="layerOpac"/>
		<variable name="PP"/>
		<variable name="V"/>
		<variable name="Nf"/>
		<variable name="Nf"/>
		<variable name="width"/>
		<variable name="cutoff"/>
		<variable name="fade"/>
		<variable name="f"/>
		<variable name="turb"/>
		<variable name="maxfreq"/>
		<variable name="r"/>
		<variable name="g"/>
		<variable name="b"/>		
	</internal>
	<code><![CDATA[#define snoise(x)    (noise(x) * 2 - 1)
#define MINFILTERWIDTH  1e-7
#define filterwidth_point(p) (max(sqrt(area(p)), MINFILTERWIDTH))
#define blend(a,b,x) ((a) * (1 - (x)) + (b) * (x))

color $(outColor);

color $(surfaceColor), $(layerColor);
color $(layerOpac);
point $(PP);
vector $(V);
normal $(Nf) ;
float $(width), $(cutoff), $(fade), $(f), $(turb), $(maxfreq) = 16;

/* init */
$(surfaceColor) = 0;

$(Nf) = faceforward(normalize(N), I);
$(V) = -normalize(I);

/* compute turbulence */
$(PP) = $(P) * $(veining);

$(width) = filterwidth_point($(PP));
$(cutoff) = clamp(0.5 / $(width), 0, $(maxfreq));

$(turb) = 0;
for($(f) = 1; $(f) < 0.5 * $(cutoff); $(f) *= 2) 
    $(turb) += abs(snoise($(PP) * $(f))) / $(f);
$(fade) = clamp(2 * ($(cutoff) - $(f)) / $(cutoff), 0, 1);
$(turb) += $(fade) * abs(snoise($(PP) * $(f))) / $(f);

$(turb) *= 0.5;  /* to match original rmarble turbulence value */

/* use turb to index into spline for layer color */

float $(r) = comp($(inColor1), 0);
float $(g) = comp($(inColor1), 1);
float $(b) = comp($(inColor1), 2);

$(layerColor) = spline($(turb),
        		       $(inColor1),
        		       $(inColor1),
        		       color($(r), $(g)+0.3, $(b)+0.25),
        		       color($(r)-0.2, $(g)+0.394, $(b)+0.53),
        		       color($(r)-0.5, $(g)+0.1, $(b)+0.35),
        		       color($(r)-0.75, $(g)+0.15, $(b)+0.05),
        		       $(inColor2),
        		       $(inColor2)); 
		       
$(layerOpac) = 1;
$(surfaceColor) = blend($(surfaceColor), $(layerColor), $(layerOpac));

$(outColor) = $(surfaceColor);]]>
	</code>
	<preview>
		<shader type="surface">
			<code><![CDATA[Ci = $(outColor); Oi = 1.0;]]>
			</code>
		</shader>
	</preview>	
</node>